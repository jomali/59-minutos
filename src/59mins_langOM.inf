



[ LanguageOM obj n;
	switch (obj) {



X00_LIMBO: switch (n) {
1:	! (descripción)
print "Más allá de la barrera casi insuperable que separa la realidad de todo lo demás. Un lugar etéreo, donde la vida, la materia y la vitalidad no son necesariamente constantes; un lugar donde el tiempo y el espacio no existen tal y como los capta nuestro ser despierto...";
if (obj hasnt visited) print " ", (emph) "¿Qué? ¿Cómo?... ¿cómo he llegado aquí?", "";
new_line;
return true;
}

X00_botas: switch (n) {
1:	! (descripción)
print "Mensaje 1 de las botas.";
new_line;
return true;
2:	! (acción: vestirse -- con las botas puestas)
print "Mensaje 2 de las botas.";
new_line;
return true;
3:	! (acción: vestirse -- con las botas quitadas)
print "Mensaje 3 de la ropa.";
new_line;
return true;
4:	! (acción: desvestirse -- con las botas quitadas)
print "Mensaje 4 de las botas.";
new_line;
return true;
5:	! (acción: desvestirse -- con las botas puestas)
print "Mensaje 5 de las botas.";
new_line;
return true;
}

X00_paredes: switch (n) {
1:	! (descripción - en presente)
print "No hay nada especial en ", (the) X00_paredes, ".";
new_line;
return true;
2:	! (descripción - en pasado)
print "No había nada especial en ", (the) X00_paredes, ".";
new_line;
return true;
}

X00_ropa: switch (n) {
1:	! (descripción -- para la ropa en su conjunto)
print "A tasteful ensemble from Ann Taylor in muted browns and olive greens (she has been an automn person since she was old enough to match her own socks).";
new_line;
return true;
6:	! (descripción -- para una prenda en concreto)
print "Mensaje 6 de la ropa. Podría incluir una descripción de los pantalones, por ejemplo.";
new_line;
return true;
2:	! (acción: vestirse -- con la ropa puesta)
print "Mensaje 2 de la ropa.";
new_line;
return true;
3:	! (acción: vestirse -- con la ropa quitada)
print "Mensaje 3 de la ropa.";
new_line;
return true;
4:	! (acción: desvestirse -- con la ropa quitada)
print "Mensaje 4 de la ropa.";
new_line;
return true;
5:	! (acción: desvestirse -- con la ropa puesta)
print "Mensaje 5 de la ropa.";
new_line;
return true;
}

X00_Silvia: switch (n) {
1:	! (descripción -- si la usamos para dar el listado de objetos de su inv.)
return L__M(##Miscellany, 19);
2:	! (descripción)
print "Tan buen aspecto como siempre.";
new_line;
return true;
3:	! (descripción)
return false;
}

X00_ventanas: switch (n) {
1:	! (descripción genérica)
print "La luz del exterior se cuela por las ventanas.";
new_line;
return true;
2:	! (descripción genérica en pasado)
print "La luz del exterior se colaba por las ventanas.";
new_line;
return true;
3:	! (descripción -- desde el baño y la habitación multiusos)
print "Se puede ver la playa desierta y el inmenso mar Cantábrico desde las ventanas.";
new_line;
return true;
4:	! (descripción -- desde la cocina)
print "Las ventanas de la cocina dan a la playa, más allá de la terraza trasera de la casa.";
new_line;
return true;
5:	! (descripción -- desde el dormitorio)
print "Desde las ventanas se pueden ver los verdes prados y las montañas de Cantabria, a lo lejos.";
new_line;
return true;
6:	! (descripción -- desde el recibidor)
print "Una ventana en el recibidor da al porche delantero, pero allí no hay nada que le llame la atención.";
new_line;
return true;
7:	! (descripción -- desde el salón)
print "Desde la ventana se puede ver la playa que se extiende en la parte de atrás de la casa.";
new_line;
return true;
8:	! (descripción -- desde el taller)
print "Hay una pequeña ventana por la que se filtra la luz del exterior.";
new_line;
return true;
9:	! (descripción -- desde la terraza)
print "Hay unos grandes ventanales en la fachada que dan a la cocina y al salón.";
new_line;
return true;
}



H01_BANNO: switch (n) {
1:	! (descripción)
print "Un pequeño baño con puertas al dormitorio y al pasillo. Es pequeño, pero luminoso. Tiene una bañera, grande como para que una persona pueda tumbarse por completo dentro, un espejo desde el que una Silvia gemela le devuelve la mirada, y un armarito auxiliar, debajo del espejo.";
new_line;
return true;
}

H01_armario: switch (n) {
1:	! (descripción -- cerrado)
print "Es un pequeño armario auxiliar de aglomerado enchapado en blanco. Ahora mismo está cerrado.";
new_line;
return true;
2:	! (descripción -- abierto)
print "Es un pequeño armario auxiliar de aglomerado enchapado en blanco. Ahora está abierto. Dentro hay algunos productos de higiene, unas velas aromáticas y varias cajas con medicinas.";
new_line;
return true;
}

H01_bannera: switch (n) {
1:	! (descripción)
print "Es grande, lo suficiente como para que una persona pueda entrar completamente tumbada dentro.";
new_line;
return true;
2:	! (acción -- al intentar entrar en la bañera si no se ha dado un baño)
print "Mensaje 2 de la bañera. Silvia observa la bañera y se plantea prepararse un baño.";
new_line;
return true;
3:	! (al confirmar el baño)
print "Mensaje 3 de la bañera.";
new_line;
return true;
4:	! (acción -- entrar en la bañera después de haberse bañado ya)
print "Mensaje 4 de la bañera.";
new_line;
return true;
}

H01_espejo: switch (n) {
1:	! (descripción -- al examinarlo por primera vez)
print "Mira a la mujer que está al otro lado del espejo: es una mujer pequeña, de pelo largo y liso color rubio pajizo y ojos castaño oscuro. Apenas la reconoce en realidad. Es ella, y a la vez una extraña. Una máscara tras la que se debe ocultar su auténtico aspecto, aquel en el que si se debería reconocer. El efecto es similar a cuando escuchas tu voz grabada y no la reconoces. ¿Esta soy yo? ¿Es así como me ven los demás?... La última pregunta se presenta en su mente por sorpresa, como una idea extraña; es... ¿es ella atractiva?";
new_line;
return true;
2:	! (descripción -- al examinarlo de nuevo)
print (string) random(
"La mujer del otro lado del espejo la sigue con la mirada.",
"Desde el otro lado del espejo su otro yo la devuelve la mirada.",
"La otra mujer la observa con curiosidad desde su lado del espejo.",
);
new_line;
return true;
}

H01_medicinas: switch (n) {
1:	! (descripción)
print "Mensaje 1 de las medicias.";
new_line;
return true;
2:	! (acción: tomar medicias por primera vez)
print "Mensaje 2 de las medicias.";
new_line;
return true;
3:	! (descripción de los efectos de una dosis normal de tranquilizantes)
print "Mensaje 3 de las medicias.";
new_line;
return true;
4:	! (acción: tomar medicias de nuevo)
print "Mensaje 4 de las medicias.";
new_line;
return true;
5:	! (descripción de los efectos de una sobredosis de tranquilizantes)
print "Mensaje 5 de las medicinas.";
new_line;
return true;
}

H01_productosHigiene: switch (n) {
1:	! (descripción)
print "Mensaje 1 de los productos de higiene.";
new_line;
return true;
}

H01_velas: switch (n) {
1:	! (descripción -- apagadas)
print "Mensaje 1 de las velas. Son unas velas aromáticas.";
new_line;
return true;
2:	! (descripción -- encendidas. Mensaje por defecto)
print "Mensaje 2 de las velas. Hay varias velas encendidas repartidas por el suelo de la habitación.";
new_line;
return true;
3:	! (descripción -- encendidas. En el baño)
print "Mensaje 3. Hay varias velas encendidas alrededor de la bañera.";
new_line;
return true;
4:	! (descripción -- encendidas. En la cocina)
print "Mensaje 4. Hay varias velas aromáticas encendidas sobre la encimera.";
new_line;
return true;
5:	! (descripción -- encendidas. En el dormitorio)
return false;
6:	! (descripción -- encendidas. En la habitación)
return false;
7:	! (descripción -- encendidas. En el pasillo)
return false;
8:	! (descripción -- encendidas. En el recibidor)
return false;
9:	! (descripción -- encendidas. En el salón)
return false;
10:	! (descripción -- encendidas. En el taller)
return false;
11:	! (descripción -- consumidas)
print "Mensaje 11 de las velas. Unas velas aromáticas consumidas por completo.";
new_line;
return true;
12:	! (acción: encenderlas -- si no tiene el mechero)
print "Mensaje 12 de las velas. Necesita algo para encenderlas.";
new_line;
return true;
13:	! (acción: encenderlas -- si está en la playa o en la terraza)
print "Mensaje 13 de las velas. Silvia trata de encender las velas con el mechero, pero el viento apaga la llama enseguida.";
new_line;
return true;
14:	! (acción: encenderlas -- mensaje por defecto)
print "Mensaje 14 de las velas. Silvia enciende las velas con el mechero y las deja repartidas por el suelo de la habitación.";
new_line;
return true;
15:	! (acción: encenderlas -- en el baño)
print "Mensaje 15 de las velas. Silvia enciende las velas con el mechero y las coloca alrededor de la bañera.";
new_line;
return true;
16:	! (acción: encenderlas -- en la cocina)
print "Mensaje 16 de las velas. Silvia utiliza el mechero para encender las velas y las coloca sobre la encimera.";
new_line;
return true;
17:	! (acción: encenderlas -- en el dormitorio)
return false;
18:	! (acción: encenderlas -- en la habitación)
return false;
19:	! (acción: encenderlas -- en el pasillo)
return false;
20:	! (acción: encenderlas -- en el recibidor)
return false;
21:	! (acción: encenderlas -- en el salón)
return false;
22:	! (acción: encenderlas -- en el taller)
return false;
23:	! (acción: encenderlas -- si ya están encendidas)
print "Mensaje 23 de las velas. Las velas no se pueden encender si ya están encendidas.";
new_line;
return true;
24:	! (acción: encenderlas -- si ya se han consumido)
print "Mensaje 24 de las velas. Las velas están consumidas por completo y ya no se pueden volver a encender.";
new_line;
return true;
25:	! (acción: apagarlas)
print "Mensaje 25 de las velas. Silvia apaga las velas con un soplido.";
new_line;
return true;
26:	! (acción: apagarlas -- si no están encendidas)
print "Mensaje 26 de las velas. Las velas ya están apagadas.";
new_line;
return true;
27:	! (mensaje cuando el temporizador hace que las velas se consuman)
print "Mensaje 27 de las velas.";
new_line;
return true;
28:	! (acción: cogerlas -- si están encendidas)
print "Mensaje 28 de las velas. No puede coger las velas mientras estén encendidas.";
new_line;
return true;
29: ! (acción: cogerlas -- si están consumidas)
print "Mensaje 29 de las velas. Consumidas, ya no le sirven para nada así que las deja donde están.";
new_line;
return true;
}



H02_COCINA: switch (n) {
1:	! (descripción)
print "Grande y espaciosa, como el resto de habitaciones de la casa, con unos ";
link( X00_ventanas, " ventanales");
print " que dan a la playa y por los que se cuela el sol, llenando la cocina de luz. Tiene una amplia ", (name) H02_encimera, " sobre la que hay ";
WriteListFrom(child(H02_encimera), ENGLISH_BIT + PARTINV_BIT);
print ". Hay también ", (a) H02_nevera, ", un juego de mesa y sillas, y puertas al ";
link( H09_SALON, " salón");
print " y a una ";
link( H11_TERRAZA, " terraza");
print " trasera.";
new_line;
return true;
}

H02_cafe: switch (n) {
1:	! (descripción)
print "Mensaje 1 del café.";
new_line;
return true;
2:	! (acción: beber el café -- primer trago)
print "Mensaje 2 del café.";
new_line;
return true;
3:	! (acción: beber el café -- tragos siguientes)
print (string) random (
"Silvia da un sorbo de la taza de café.",
"Se acerca la taza de nuevo a los labios y disfruta el penetrante olor del café antes de dar otro sorbo.",
"Bebe de la taza, recreándose en el sabor amargo que le deja el café en la boca.",
);
new_line;
return true;
4:	! (acción: beber café -- último trago)
print "Mensaje 4 del café. Silvia se acaba el café con un último y largo sorbo de la taza.";
new_line;
return true;
5: ! (acción: echar güisqi al café )
print "Mensaje 5 del café.";
new_line;
return true;
6:	! (acción: beber el café -- primer trago tras echarle güisqui)
print "Mensaje 6 del café.";
new_line;
return true;
7:	! (acción: beber el café -- tragos siguientes tras echarle güisqui)
print (string) random (
"Silvia da un sorbo de la taza de café. Siente la picazón del güisqui en la garganta.",
"Se acerca la taza de nuevo a los labios y disfruta el penetrante olor del café antes de dar otro sorbo. El licor le deja una agradable picazón en la garganta.",
"Bebe de la taza, recreándose en el sabor amargo y la picazón que le deja la bebida en la boca.",
);
new_line;
return true;
8:	! (acción: beber el café -- último trago tras echarle güisqui)
print "Mensaje 8 del café. Silvia se acaba su café irlandés con un último y largo sorbo de la taza.";
new_line;
return true;
}

H02_cafetera: switch (n) {
1:	! (descripción)
print "Es una sencilla cafetera de esas de goteo, con una jarra sobre la que cae el café recién hecho, y que ahora está vacía. Tiene un botón de encendido, en un lateral.";
new_line;
return true;
2:	! (acción: encenderla / pulsar el botón de encendido)
print "Mensaje 2 de la cafetera. Silvia se pone un café.";
new_line;
return true;
3:	! (acción: encender la cafetera -- si ya lo ha hecho antes)
print "Mensaje 3 de la cafetera. Ya se ha preparado un café y no va a hacerlo de nuevo.";
new_line;
return true;
}

H02_mechero: switch (n) {
1:	! (descripción)
print "Un mechero, normal y corriente, sin nada de especial.";
new_line;
return true;
}

H02_mesa: switch (n) {
1:	! (descripción)
print "Una sencilla ", (name) H02_mesa, " de madera.";
if (child(obj)) print " Sobre ella puede ver ";
WriteListFrom(child(H02_mesa), ENGLISH_BIT + PARTINV_BIT);
print ".";
new_line;
return true;
}

H02_nevera: switch (n) {
1:	! (descripción 1: entre 0-15 mins.)
print "Mensaje 1 de la nevera.";
new_line;
return true;
2:	! (descripción 2: entre 15-30 mins.)
print "Mensaje 2 de la nevera.";
new_line;
return true;
3:	! (descripción 3: entre 30-45 mins.)
print "Mensaje 3 de la nevera.";
new_line;
return true;
4:	! (descripción 4: entre 45-59 mins.)
print "Mensaje 4 de la nevera.";
new_line;
return true;
5:	! (acción: abrirla)
print "Mensaje 5 de la nevera.";
new_line;
return true;
6:	! (acción: abrirla -- si ya se ha preparado el sándwich y el plato)
print "Mensaje 6 de la nevera.";
new_line;
return true;
7:	! (si el interlector escoge preparar un sándwich)
print "Mensaje 7 de la nevera.";
new_line;
return true;
8:	! (si el interlector escoge preparar un plato elaborado)
print "Mensaje 8 de la nevera.";
new_line;
return true;
}

H02_periodico: switch (n) {
1:	! (descripción)
print "Es un periódico local de hace unos meses. Lleva en portada una foto en que se ve un cordón policial con jóvenes gritando detrás y el titular: @<<El lamentable 'escrache' en la Universidad al presidente del Gobierno regional se salda con destrozos@>>.";
new_line;
return true;
2:	! (al abrirlo/leerlo por primera vez)
print "Silvia se detiene un momento para leer con más atención la noticia que lleva ~El Diario Montañés~ en portada. Según el periódico, la Universidad impidió a una treintena de manifestantes el acceso a una intervención abierta del presidente del Gobierno regional. Más adelante, en páginas interiores, con tipografía destacada, unas declaraciones del consejero de Educación: @<<los manifestantes eran diecisiete a juzgar por las fotos y videos que he podido ver de lo sucedido@>>. Entre las fotos escogidas para acompañar la noticia apenas se ven entre ocho o diez jóvenes, abandonando el sitio apresuradamente ante la llegada de la policía, con una papelera destrozada en primer plano.";
new_line;
new_line;
print "Pasa las páginas ojeando por encima alguna otra noticia. Hay una nota sobre el progreso en la construcción de un edificio del que se dice que @<<apenas provocará impacto visual en el centro de la capital cántabra@>>. Una foto muestra parte del edificio (aparentemente no cabe entero en la foto): una mole enorme, a medio construir, recubierta de andamios.";
new_line;
new_line;
print "Hay también una noticia sobre cierta actividad solar inusual que un tal investigador de una universidad tal asegura que puede tener unas tales consecuencias inesperadas y muy peligrosas...";
new_line;
new_line;
print "Aburrida, cierra el periódico.";
new_line;
return true;
3:	! (al abrirlo/leerlo de nuevo)
print "Vuelve a ojear por encima la noticia de portada, sobre esa manifestación de entre ocho y treinta estudiantes. Con cierta sorpresa, se da cuenta entonces de que en ningún momento se alude al motivo de la presencia del presidente regional en la Universidad, aunque si se cita que @<<tuvo que abandonar el recinto escoltado, ante el evidente peligro que representaban los radicales@>>.";
new_line;
return true;
}



H03_DORMITORIO: switch (n) {
1:	! (descripción)
print "Es el dormitorio de su padre. Estuvo recogiendo y limpiando cosas en la casa el año anterior, poco después del entierro, pero la habitación sigue prácticamente tal y como la dejó él antes de morir. Está dominada por una gran cama con un cabecero en hierro forjado negro y sábanas también oscuras. A su lado hay una mesilla de noche con un radiodespertador encima. Y poco más. Apenas hay adornos. Tiene puertas al pasillo y a un pequeño baño.";
new_line;
return true;
}

H03_cajaZapatos: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la caja de zapatos.";
new_line;
return true;
}

H03_cajon: switch (n) {
1:	! (descripción -- cerrado)
print "Los cajones de la mesita de noche están cerrados.";
new_line;
return true;
2:	! (descripción -- abierto)
print "Dentro del cajón que ha dejado abierto puede ver un montón de ropa interior y una caja de preservativos.";
new_line;
return true;
3:	! (acción: abrir -- si está abierto)
print "El cajón ya está abierto.";
new_line;
return true;
4:	! (acción: abrir -- si está cerrado. Al abrirlo por primera vez)
print "Abre el cajón, descubriendo un montón de ropa interior y una caja de preservativos.";
new_line;
return true;
5:	! (acción: abrir -- si está cerrado)
print "Abre el cajón. Dentro hay un montón de ropa interior y una caja de preservativos.";
new_line;
return true;
6:	! (acción cerrar -- si está cerrado)
print "El cajón ya está cerrado.";
new_line;
return true;
7:	! (acción cerrar -- si está abierto)
print "Cierra el cajón.";
new_line;
return true;
}

H03_cama: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la cama.";
new_line;
return true;
2:	! (acción: meterse en la cama)
print "Mensaje 2 de la cama. Silvia se plantea echarse a dormir un rato.";
new_line;
return true;
3:	! (si el interlector escoge dormir -- sin haber tomado tranquilizantes)
print "Mensaje 3 de la cama.";
new_line;
return true;
4:	! (si el interlector escoge dormir -- tras haber tomado tranquilizantes)
print "Mensaje 4 de la cama. Silvia introduce en el radiodespertador en cuántos minutos quiere que suene la alarma: ";
new_line;
return true;
5:	! (mensaje tras haber programado el radiodespertador)
print "Mensaje 5 de la cama.";
new_line;
return true;
6:	! (si la alarma suena antes de que finalice la cuenta atrás de 59 mins.)
print "Mensaje 6 de la cama. El despertador empieza a sonar y Silvia se despierta y se levanta otra vez de la cama.";
new_line;
return true;
7:	! (si la alarma no suena antes de que finalice la cuenta atrás de 59 mins.)
return false;
}

H03_llave: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la llave.";
new_line;
return true;
}

H03_mesitaNoche: switch (n) {
1:	! (descripción -- con el cajón cerrado)
print "Es una pequeña mesita de noche con algunos cajones. Encima hay un radiodespertador.";
new_line;
return true;
2:	! (descripción -- con el cajón abierto)
print "Es una pequeña mesita de noche con algunos cajones. Uno de ellos está abierto y deja ver un montón de ropa interior y una caja de preservativos en su interior. Encima hay un radiodespertador.";
new_line;
return true;
}

H03_preservativos: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la caja de preservativos.";
new_line;
return true;
}

H03_radiodespertador: switch (n) {
1:	! (descripción -- con la radio apagada)
print "Mensaje 1 del radiodespertador.";
new_line;
return true;
2:	! (descripción -- con la radio encendida)
print "Mensaje 2 del radiodespertador.";
new_line;
return true;
3:	! (acción: encender la radio -- si ya está encendida)
print "Mensaje 3 del radiodespertador.";
new_line;
return true;
4:	! (acción: encender la radio -- si es la primera vez que la enciende)
print "Mensaje 4 del radiodespertador.";
new_line;
return true;
5:	! (acción: encender la radio -- mensaje por defecto)
print "Mensaje 5 del radiodespertador.";
new_line;
return true;
6:	! (acción: apagar la radio -- si ya está apagada)
print "Mensaje 6 del radiodespertador.";
new_line;
return true;
7:	! (acción: apagar la radio)
print "Mensaje 7 del radiodespertador.";
new_line;
return true;
8:	! (acción: subir volumen -- si ya está en el máximo)
print "Mensaje 8 del radiodespertador.";
new_line;
return true;
9: ! (acción: subir volumen)
print "Mensaje 9 del radiodespertador.";
new_line;
return true;
10:	! (acción: bajar volumen -- si ya está en el mínimo)
print "Mensaje 10 del radiodespertador.";
new_line;
return true;
11:	! (acción: bajar volumen)
print "Mensaje 11 del radiodespertador.";
new_line;
return true;
}

H03_trastos: switch (n) {
1:	! (descripción)
print "Mensaje 1 de los trastos.";
new_line;
return true;
}

H03_ropaInterior: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la ropa interior del padre.";
new_line;
return true;
}



H04_HABITACION: switch (n) {
1:	! (descripción)
print "Su antiguo dormitorio. Después de irse ella de casa su padre lo reformó: el lugar en el que estaba su cama hay ahora una bicicleta estática, y hay también un gran armario y un viejo escritorio de madera oscura que antes no estaban allí. Tiene una puerta al pasillo.";
new_line;
print "Su bolso está encima del escritorio.";
new_line;
print "Puede ver también un balón de baloncesto en una esquina, y una caja de herramientas junto al armario.";
new_line;
return true;
}

H04_armario: switch (n) {
1:	! (descripción -- cerrado)
print "Mensaje 1 del armario.";
new_line;
return true;
2:	! (descripción -- abierto y con la puerta desencajada)
print "Mensaje 2 del armario. Dentro hay un montón de ropa vieja. Una de las bisagras de la puerta está suelta y hace que cuelgue de forma extraña.";
new_line;
return true;
3:	! (descripción -- abierto y con la puerta arreglada)
print "Mensaje 3 del armario.";
new_line;
return true;
4:	! (acción: abrirlo -- si ya está abierto)
print "El armario ya está abierto.";
new_line;
return true;
5:	! (acción: abrirlo -- al abrirlo por primera vez)
print "Mensaje 5 del armario.";
new_line;
return true;
6:	! (acción: abrirlo -- si la puerta sigue desencajada)
print "Mensaje 6 del armario.";
new_line;
return true;
7:	! (acción: abrirlo -- después de arreglar la puerta)
print "Mensaje 7 del armario.";
new_line;
return true;
8:	! (acción: cerrarlo -- si ya está cerrado)
print "El armario ya está cerrado.";
new_line;
return true;
9:	! (acción: cerrarlo -- si la puerta sigue desencajada)
print "Mensaje 9 del armario.";
new_line;
return true;
10:	! (acción: cerrarlo -- después de arreglar la puerta)
print "Mensaje 10 del armario. La puerta ahora cierra perfectamente.";
new_line;
return true;
}

H04_balonBaloncesto: switch (n) {
1:	! (descripción)
print "Mensaje 1 del balón. Un viejo balón de baloncesto. Está un poco bajo.";
new_line;
return true;
}

H04_bicicletaEstatica: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la bicicleta estática.";
new_line;
return true;
2:	! (acción: subirse a la bici -- por primera vez)
print "Mensaje 2 de la bicicleta.";
new_line;
return true;
3:	! (acción: subirse a la bici -- mensaje por defecto)
print "Mensaje 3 de la bicicleta.";
new_line;
return true;
}

H04_cajaHerramientas: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la caja de herramientas.";
new_line;
return true;
}

H04_escritorio: switch (n) {
1:	! (descripción)
print "Mensaje 1 del escritorio. Un viejo escritorio de madera oscura sobre el que puede ver su bolso.";
new_line;
return true;
}

H04_puerta: switch (n) {
1:	! (descripción -- si está cerrada)
print "Mensaje 1 de la puerta.";
new_line;
return true;
2:	! (descripción -- si está abierta y la ha arreglado)
print "Mensaje 2 de la puerta.";
new_line;
return true;
3:	! (descripción -- si está abierta y desencajada)
print "Mensaje 3 de la puerta. Tiene suelta una de las bisagras.";
new_line;
return true;
4:	! (al indicar que se quiere arreglar la puerta)
print "Mensaje 4 de la puerta.";
new_line;
return true;
}

H04_silla: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la silla.";
new_line;
return true;
}


H04_bolso: switch (n) {
1:	! (descripción)
print "Mensaje 1 del bolso. Dentro tiene un cuaderno con motivos de ", (emph) "El Principito", " y un montón de exámenes sin corregir.";
new_line;
return true;
}

H04_cuaderno: switch (n) {
1:	! (descripción)
print "Mensaje 1 del cuaderno.";
new_line;
return true;
2:	! (acción: abrirlo -- por primera vez)
print "Mensaje 2 del cuaderno.";
new_line;
return true;
3:	! (acción: abrirlo -- mensaje por defecto)
print "Mensaje 3 del cuaderno.";
new_line;
return true;
}

H04_examenes: switch (n) {
default: return false;
}





H06_PASILLO: switch (n) {
1:	! (descripción)
print "Conecta el piso de abajo a través de las escaleras con el dormitorio de su padre, una habitación multiusos, y el baño del segundo piso. Colgadas en la pared hay varias fotos antiguas enmarcadas, algunas de cuando era niña, con sus padres.";
new_line;
return true;
}

H06_fotografias: switch (n) {
1:	! (descripción)
print "Mensaje 1 de las fotografías.";
new_line;
return true;
}

H06_fotografia1: switch (n) {
1:	! (descripción)
print "Descripción de la fotografía.";
new_line;
return true;
}

H06_fotografia2: switch (n) {
1:	! (descripción)
print "Descripción de la fotografía.";
new_line;
return true;
}

H06_fotografia3: switch (n) {
1:	! (descripción)
print "Descripción de la fotograia.";
new_line;
return true;
}

H06_fotografia4: switch (n) {
1:	! (descripción)
print "Descripción de la fotografía.";
new_line;
return true;
}



H07_PLAYA: switch (n) {
1:	! (descripción)
print "Una playa completamente desierta. Nunca le ha gustado ir a la playa en la ciudad, saturada siempre de gente tostándose al sol. Pero esta si. Es agradable sentir la arena entre los pies y el penetrante olor del mar. La playa se extiende de en dirección este-oeste, con el mar al norte y la casa al sur.";
new_line;
return true;
2:	! (acción: ir al este/oeste -- vestida. Si es por primera vez)
print "Mensaje 2 de la playa.";
new_line;
return true;
3:	! (acción: ir al este/oeste -- vestida. Mensaje por defecto)
print "Mensaje 3 de la playa.";
new_line;
return true;
4:	! (acción: ir al este/oeste -- desnuda. Si es por primera vez)
print "Mensaje 4 de la playa.";
new_line;
return true;
5:	! (acción: ir al este/oeste -- desnuda. Mensaje por defecto)
print "Mensaje 5 de la playa.";
new_line;
return true;
}

H07_casa: switch (n) {
1:	! (descripción -- al examinarla por primera vez)
print "Mensaje 1 de la casa.";
new_line;
return true;
2:	! (descripción -- mensaje por defecto)
print "Mensaje 2 de la casa.";
new_line;
return true;
}

H07_mar: switch (n) {
1:	! (descripción)
print "Mensaje 1 del mar.";
new_line;
return true;
2:	! (acción: meterse en el mar -- si no se ha metido antes)
print "Mensaje 2 del mar.";
new_line;
return true;
3:	! (al confirmar la acción de meterse en el mar)
print "Mensaje 3 del mar.";
new_line;
return true;
4:	! (acción: meterse en el mar -- si ya se ha metido antes)
print "Mensaje 4 del mar.";
new_line;
return true;
}



H08_RECIBIDOR: switch (n) {
1:	! (descripción)
print "La puerta principal de la casa da a un pequeño recibidor desde el que se puede seguir un pasillo hasta el salón, o subir por las escaleras hasta el segundo piso. Junto a la puerta hay una cómoda de madera oscura sobre la que descansa un teléfono.";
new_line;
return true;
}

H08_cajetilla: switch (n) {
1:	! (descripción)
print "Una cajetilla de tabaco empezada, de su padre. Le quedan seis cigarrillos.";
new_line;
return true;
2:	! (acción: fumar un cigarrillo -- por primera vez)
print "Mensaje 2 de la cajetilla.";
new_line;
return true;
3:	! (acción: fumar un cigarrillo -- de nuevo)
print "Mensaje 3 de la cajetilla.";
new_line;
return true;
}

H08_cajon: switch (n) {
1:	! (descripción -- cerrado)
print "El cajón de la cómoda está cerrado.";
new_line;
return true;
2:	! (descripción -- abierto)
print "Dentro del cajón hay un montón de trastos entre los que destaca una cajetilla de tabaco.";
new_line;
return true;
3:	! (acción: abrir -- si está abierto)
print "El cajón ya está abierto.";
new_line;
return true;
4:	! (acción: abrir -- si está cerrado)
print "Abre el cajón, descubriendo un montón de trastos entre los que destaca una cajetilla de tabaco.";
new_line;
return true;
5:	! (acción cerrar -- si está cerrado)
print "El cajón ya está cerrado.";
new_line;
return true;
6:	! (acción cerrar -- si está abierto)
print "Cierra el cajón.";
new_line;
return true;
}

H08_comoda: switch (n) {
1:	! (descripción -- con el cajón cerrado)
print "Es una pequeña cómoda de madera oscura sobre la que hay un teléfono. Tiene un único cajón, que en estos momentos está cerrado.";
new_line;
return true;
2:	! (descripción -- con el cajón abierto)
print "Es una pequeña cómoda de madera oscura sobre la que hay un teléfono. Tiene un único cajón, que ahora está abierto, dejando al descubierto un montón de trastos entre los que ve una cajetilla de tabaco.";
new_line;
return true;
}

H08_telefono: switch (n) {
1:	! (descripción -- al examinarlo por primera vez)
print "Está sobre la cómoda, al lado de la puerta. Es de esos multifunción con botones para consultar el buzón de voz, el mensaje del contestador automático y la agenda de contactos. ", (strong) "(La idea al describir estos botones es que el interlector pueda pulsarlos. Si se incluye esto, habría que preparar también descripciones para el buzón de voz ---¿últimos mensajes que le hayan dejado al padre?---, el contestador ---la voz del padre diciendo que 'en estos momentos no está' es un imagen interesante---, y la agenda.", " Sin duda, contar con una memoria para guardar contactos es algo que resultará muy útil a casi todo el mundo, aunque no a ella. Sólo hay dos números a los que llamaba habitualmente, y se los sabe de memoria; uno de ellos, de hecho, es el número de este mismo teléfono, el de su padre. Y ya no le sirve de nada ahora que no está. El otro es el de Carmen. Hace varios días que no usa ese tampoco. Desde la discusión. No han vuelto a hablar, y no porque siga enfadada y no quiera hacerlo ---aunque, en parte, un poco también---, sino porque no ha sabido qué podía decirla después del otro día... la echa de menos.";
new_line;
return true;
2:	! (descripción -- al examinarlo mientras no se reviva el recuerdo)
print "Mira el teléfono, pensando en lo mucho que echa de menos a Carmen. Pero, ¿cómo empezar una conversación después de la discusión del otro día? ¿qué puede decirla después de aquello?";
new_line;
return true;
3:	! (descripción -- tras revivir el recuerdo "LA DISCUSIÓN")
print "Mensaje 3 del teléfono.";
new_line;
return true;
4:	! (descripción final por defecto)
print "Mensaje 4 del teléfono.";
new_line;
return true;
}



H09_SALON: switch (n) {
1:	! (descripción)
print "La habitación más grande de la casa. Es un lugar agradable, con varias ", (name) H09_estanterias, " repletas de ", (name) H09_libros, " y viejos sillones de aspecto cómodo. Destacan ", (a) H09_televisor, " con ", (name) H09_DVD, " y ", (a) H09_muebleBar, ", en una esquina. Está conectada con la ";
link( H02_COCINA, " cocina");
print " y el ";
link( H08_RECIBIDOR, " recibidor");
print ".";
new_line;
return true;
}

H09_botellaGuisqui: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la botella de güisqui.";
new_line;
return true;
2:	! (mensaje ante la acción de beber)
print "Mensaje 2 de la botella de güisqui.";
new_line;
return true;
}

H09_DVD: switch (n) {
1:	! (descripción -- estando apagado)
print "Un aparato de DVD apagado.";
new_line;
return true;
2:	! (descripción -- estando encendido)
print "El DVD ahora está encendido.";
new_line;
return true;
3:	! (descripción de la película al verla por primera vez)
print "Mensaje 3 del DVD.";
new_line;
return true;
4:	! (al examinar la tele o el DVD después de haber puesto la película)
print "Mensaje 4 del DVD.";
new_line;
return true;
}

H09_libros: switch (n) {
1:	! (descripción -- esta parte se imprime sólo la primera vez que se examinan)
print "Su padre tenía una biblioteca realmente grande. Recuerda escucharle decir, de pequeña, que los libros eran la forma más barata de viajar. Probablemente ahora le parecería una frase artificial, pero lo cierto es que desde entonces no se ha quitado de la cabeza esa imagen del viaje cada vez que ha cogido un libro; una turista de visita por los lugares descritos por el escritor, cargada de equipaje y todo... resulta curioso cómo las cosas más insignificantes pueden modelar nuestra forma de pensar.";
new_line;
return O__M(H09_libros, 2);
2:	! (descripción)
print "Siempre que ha venido aquí de visita se ha entretenido ojeando esas estanterías. Esperaba el momento adecuado para leer alguno de esos libros que siempre había querido leer pero para los que no había encontrado tiempo, como los tres volúmenes de una lujosa edición de ~A la busca del tiempo perdido~, que se destacan a un lado.";
new_line;
return true;
}

H09_muebleBar: switch (n) {
1:	! (descripción -- cerrado)
print "Se encuentra en una esquina del salón, desplazado por las estanterías de libros. Está lleno de polvo.";
new_line;
return true;
2:	! (descripción -- abierto)
print "El mueble-bar está lleno de trofeos de fotografía y pintura de certámenes locales, amontonados allí descuidadamente. De su padre. En cuanto a bebidas, sólo hay una botella de güisqui, medio vacía, y casi parece que está allí por obligación, porque es algo que debe haber dentro de un mueble-bar.";
new_line;
return true;
}

H09_televisor: switch (n) {
1:	! (descripción -- apagada)
print "Es una vieja ";
link( H09_televisor, " televisión");
print " de gran tamaño, conectada a ", (a) H09_DVD, ". Está apagada.";
new_line;
return true;
2:	! (descripción -- encendida)
print "Es una vieja ";
link( H09_televisor, " televisión");
print " de gran tamaño, conectada a ", (a) H09_DVD, ". Está encendida, pero sólo se ve esa nieve que aparece cuando no hay señal. Silvia cambia de canal varias veces, pero en todos ellos se ve esa misma nieve.";
new_line;
return true;
}

H09_tiempoPerdido: switch (n) {
1:	! (descripción al examinar el libro)
print "Una lujosa edición en tres volúmenes de ~A la busca del tiempo perdido~, de Marcel Proust.";
new_line;
return true;
2:	! (al leer el libro por primera vez)
print "Mensaje 2 de @<<A la busca del tiempo perdido@>>.";
new_line;
return true;
3:	! (al leer el libro de nuevo)
print "Mensaje 3 de @<<A la busca del tiempo perdido@>>.";
new_line;
return true;
}



H10_taller: switch (n) {
1:	! (descripción)
print "Es poco más que un cuarto trastero con una única puerta, de vuelta a la terraza. Todo lo que hay aquí dentro eran cosas de su padre, y está prácticamente tal y como lo dejó antes de morir. Hay una mesa de trabajo con pinturas, pinceles y disolventes, y un montón de lienzos repartidos por todo el espacio.";
new_line;
return true;
}

H10_arcon: switch (n) {
1:	! (descripción -- cuando está cerrado)
print "Mensaje 1 del arcón.";
new_line;
return true;
2:	! (descripción -- cuando está abierto)
print "Mensaje 2 del arcón.";
new_line;
return true;
3:	! (acción: abrirlo -- si tiene la cerradura cerrada)
print "Mensaje 3 del arcón. Silvia intenta abrir la tapa, pero el arcón está cerrado con llave.";
new_line;
return true;
4:	! (acción: abrirlo -- si ya está abierto)
print "Mensaje 4 del arcón.";
new_line;
return true;
5:	! (acción: abrirlo -- por primera vez)
print "Abre el arcón, descubriendo un rifle de caza en su interior.";
new_line;
return true;
6:	! (acción: abrirlo -- mensaje por defecto)
print "Abre el arcón, descubriendo (lo que sea que haya dentro) en su interior.";
new_line;
return true;
7:	! (acción: cerrarlo -- si ya está cerrado)
print "Ya está cerrado.";
new_line;
return true;
8:	! (acción: cerrarlo -- mensaje por defecto)
print "Mensaje 8 del arcón. Silvia cierra el arcón.";
new_line;
return true;
}

H10_cerradura: switch (n) {
1:	! (descripción -- cerrada)
print "Mensaje 1 de la cerradura.";
new_line;
return true;
2:	! (descripción -- abierta con la llave)
print "Menaje 2 de la cerradura.";
new_line;
return true;
3:	! (descripción -- destrozada con la caja de herramientas)
print "Mensaje 3 de la cerradura.";
new_line;
return true;
4:	! (acción: abrir la cerradura -- sin utilizar nada para hacerlo)
print "Silvia no puede abrir la cerradura a menos que utilice algo para hacerlo.";
new_line;
return true;
5:	! (acción: abrir la cerradura -- usando un objeto que no es adecuado)
print "No puede abrir la cerradura con eso.";
new_line;
return true;
6:	! (acción: abrir la cerradura -- usando la llave)
print "Mensaje 6 de la cerradura.";
new_line;
return true;
7:	! (acción: abrir la cerradura -- usando las herramientas)
print "Mensaje 7 de la cerradura.";
new_line;
return true;
8:	! (acción: cerrar la cerradura -- usando la llave)
print "Mensaje 8 de la cerradura.";
new_line;
return true;
}

H10_dibujo: switch (n) {
1:	! (descripción -- al examinarlo por primera vez)
print "Mensaje 1 del dibujo.";
new_line;
print "Something about <el cuadro que hay enmarcado> makes you want to brood about <EL DIBUJO>.";
new_line;
return true;
2:	! (descripción -- mientras no se reviva el recuerdo titulado "EL DIBUJO")
print "Mensaje 2 del dibujo.";
new_line;
return true;
3:	! (descripción -- tras revivir el recuerdo "EL DIBUJO")
print "Mensaje 3 del dibujo.";
new_line;
return true;
}

H10_lienzos: switch (n) {
1:	! (descripción)
print "Mensaje 1 de los lienzos.";
new_line;
return true;
}

H10_lienzo: switch (n) {
1:	! (descripción)
print "Mensaje 1 del lienzo.";
new_line;
return true;
2:	! (acción: colocarlo sobre el caballete)
print "Mensaje 2 del lienzo.";
new_line;
return true;
}

H10_mesa: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la mesa. Tiene pinturas, pinceles y disolventes encima.";
new_line;
return true;
}

H10_pinturas: switch (n) {
1:	! (descripción)
print "Mensaje 1 de las pinturas.";
new_line;
return true;
}

H10_rifle: switch (n) {
1:	! (descripción -- si es la primera vez que se examina)
print "Mensaje 1 del rifle.";
new_line;
return true;
2:	! (descripción -- mensaje por defecto)
print "Mensaje 2 del rifle.";
new_line;
return true;
}



H11_terraza: switch (n) {
1:	! (descripción)
print "Un privilegiado mirador a la playa desierta y al mar cantábrico. Hay una mesa y algunas sillas de exterior, deterioradas por el tiempo y el salitre, un aro de baloncesto sin red colgado a la fachada de la casa y algunas macetas con hierbajos dispuestas aquí y allá. Una pasarela cerrada con portilla desciende hasta la playa, al norte. Además, hay acceso a un pequeño taller ---una construcción anexa a la casa para guardar trastos y herramientas--- y a la cocina.";
new_line;
print "Puede ver también un caballete para lienzos, cerrado y apoyado contra la pared.";
new_line;
return true;
2:	! (acción: oler)
print "Mensaje 2 de la terraza.";
new_line;
return true;
3:	! (acción: escuchar)
print "Mensaje 3 de la terraza.";
new_line;
return true;
}

H11_aroBaloncesto: switch (n) {
1:	! (descripción)
print "Mensaje 1 del aro de baloncesto.";
new_line;
return true;
}

H11_caballete: switch (n) {
1:	! (descripción -- cerrado)
print "Mensaje 1 del caballete.";
new_line;
return true;
2:	! (descripción -- abierto)
print "Mensaje 2 del caballete.";
new_line;
return true;
3:	! (descripción -- con un lienzo colocado en él)
print "Mensaje 3 del caballete.";
new_line;
return true;
4:	! (acción: abrirlo -- si ya está abierto)
print "Ya está abierto.";
new_line;
return true;
5:	! (acción: abrirlo -- si está cerrado)
print "Mensaje 5 del caballete.";
new_line;
return true;
6:	! (acción: cerrarlo -- si ya está cerrado)
print "Ya está cerrado.";
new_line;
return true;
7:	! (acción: cerrarlo -- si tiene el lienzo colocado en él)
print "Mensaje 7 del caballete.";
new_line;
return true;
8:	! (acción: cerrarlo -- si está abierto)
print "Mensaje 8 del caballete.";
new_line;
return true;
}

H11_macetas: switch (n) {
1:	! (descripción -- mins. 0-15)
print "Mensaje 1 de las macetas.";
new_line;
return true;
2:	! (descripción -- mins. 15-30)
print "Mensaje 2 de las macetas.";
new_line;
return true;
3:	! (descripción -- mins. 30-45)
print "Mensaje 3 de las macetas.";
new_line;
return true;
4:	! (descripción -- mins. 45-59)
print "Mensaje 4 de las macetas.";
new_line;
return true;
}

H11_muebles: switch (n) {
1:	! (descripción)
print "Mensaje 1 de la mesa y las sillas. (Sobre la mesa puede ver <lista de objetos que hay sobre la mesa>).";
new_line;
return true;
}


	}
];





[ O__M obj n x1;
	if (n == 0) n = 1;
	LanguageOM(obj, n, x1);
];


